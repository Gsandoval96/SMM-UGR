/*
 * Copyright (C) 2019 Guillermo Sandoval Schmidt
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
package sm.gss.iu;

import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.image.BufferedImage;

/**
 * Lienzo que incluye una imagen
 * @author Guillermo Sandoval Schmidt
 * @see sm.gss.iu.Lienzo2DFinal
 */
public class LienzoImagen2D extends Lienzo2DFinal {

    /**
     * Crea un nuevo LienzoImagen2D
     */
    public LienzoImagen2D() {
        initComponents();
    }
    
    /**
     * Pinta los componentes del LienzoImagen2D
     * @param g Graphics que utilizamos para dibujar los componentes
     * @see java.awt.Graphics
     */
    @Override
    public void paintComponent(Graphics g){
        super.paintComponent(g);
        if(img!=null) g.drawImage(img,0,0,this);
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * Setter del parámetro 'img'
     * @param img Nuevo valor de la imagen
     * @see java.awt.image.BufferedImage
     * @see java.awt.Dimension
     */
    public void setImage(BufferedImage img){
        this.img = img;
        if(img!=null)
            setPreferredSize(new Dimension(img.getWidth(),img.getHeight()));
    }
    
    /**
     * Getter del parámetro 'img'
     * @return Devuelve la imagen del LienzoImagen2D
     */
    public BufferedImage getImage(){
        return img;
    }
    
    /**
     * Getter del parámetro 'img'
     * @param drawVector Indica si utilizamos un vector de dibujado o no
     * @return Devuelve la imagen del LienzoImagen2D
     * @see java.awt.image.BufferedImage
     */
    public BufferedImage getImage(boolean drawVector){
        if (drawVector) {
            BufferedImage imgOut = new BufferedImage (img.getWidth(),img.getHeight(),img.getType());
            paint(imgOut.createGraphics());
            return imgOut;
        }
        else
            return img;
        }
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    /**
     * Imagen del LienzoImagen2D
     */
    private BufferedImage img;
    

}


