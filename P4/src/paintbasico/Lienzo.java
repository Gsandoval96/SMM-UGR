/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package paintbasico;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Point;

/**
 *
 * @author Guillermo Sandoval Schmidt
 */
public class Lienzo extends javax.swing.JPanel {

    /**
     * Creates new form Lienzo
     */
    public Lienzo() {
        initComponents();
        
        pointSize = 10;
        filled = false;
        ini = new Point(-2*pointSize,-2*pointSize);
        fin = new Point(-2*pointSize,-2*pointSize);
        mode = DrawMode.POINT;
        color = Color.BLACK;
    }
    
    public void reset(){
        ini = new Point(-2*pointSize,-2*pointSize);
        fin = new Point(-2*pointSize,-2*pointSize);
        repaint();
    }

    public Color getColor() {
        return color;
    }

    public void setColor(Color color) {
        this.color = color;
    }

    public DrawMode getMode() {
        return mode;
    }

    public void setMode(DrawMode mode) {
        this.mode = mode;
    }

    public boolean isFilled() {
        return filled;
    }

    public void setFilled(boolean isFilled) {
        this.filled = isFilled;
    }
    
    
    
    @Override
    public void paint(Graphics g){
        super.paint(g);
        
        g.setColor(color);
        switch(mode){
            case POINT:
                g.fillOval(ini.x-pointSize/2, ini.y-pointSize/2, pointSize, pointSize);
            break;
            case LINE:
                g.drawLine(ini.x, ini.y, fin.x, fin.y);
            break;
            case RECT:
                drawRect(ini.x, ini.y, fin.x, fin.y, g);
            break;
            case OVAL:
                drawOval(ini.x, ini.y, fin.x, fin.y, g);
            break;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(720, 512));
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                formMouseReleased(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
   
    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        ini = evt.getPoint();
    }//GEN-LAST:event_formMouseClicked

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        ini = evt.getPoint();
    }//GEN-LAST:event_formMousePressed

    private void formMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseReleased
        fin = evt.getPoint();
        repaint();
    }//GEN-LAST:event_formMouseReleased

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        fin = evt.getPoint();
        repaint();
    }//GEN-LAST:event_formMouseDragged

    private void drawRect(int x1, int y1, int x2, int y2, Graphics g){
        int inix, iniy, w, h;
        
        if(x1<x2){
            inix = x1;
            w = x2-x1;
        }
        else{
            inix = x2;
            w = x1-x2;
        }
        
        if(y1<y2){
            iniy = y1;
            h = y2-y1;
        }
        else{
            iniy = y2;
            h = y1-y2;
        }
        
        if(filled) g.fillRect(inix, iniy, w, h);
        else g.drawRect(inix, iniy, w, h);
    }
    
    private void drawOval(int x1, int y1, int x2, int y2, Graphics g){
        int inix, iniy, w, h;
        
        if(x1<x2){
            inix = x1;
            w = x2-x1;
        }
        else{
            inix = x2;
            w = x1-x2;
        }
        
        if(y1<y2){
            iniy = y1;
            h = y2-y1;
        }
        else{
            iniy = y2;
            h = y1-y2;
        }
        
        if(filled) g.fillOval(inix, iniy, w, h);
        else g.drawOval(inix, iniy, w, h);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    private Color color;
    private DrawMode mode;
    private boolean filled;
    private Point ini;
    private Point fin;
    private int pointSize;
}
